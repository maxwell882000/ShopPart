<?php

namespace App\Domain\Delivery\Entities;

use App\Domain\Core\Language\Traits\Translatable;
use App\Domain\Core\Main\Entities\Entity;
use App\Domain\Delivery\Builders\AvailableCityBuilder;

class AvailableCities extends Entity
{
    use Translatable;

    protected $table = 'available_cities';
    public array $countryName = [
        "ru" => "Узбекистан",
        "en" => "Uzbekistan",
        "uz" => "O`zbekiston"
    ];
    public string $countryCode = "UZ";


    public function newEloquentBuilder($query): AvailableCityBuilder
    {
        return new AvailableCityBuilder($query);
    }


    public function getFullNameAttribute()
    {
        if ($this->id)
            return $this->getRegionNameCurrentAttribute() . " " . $this->getCityNameCurrentAttribute();
    }

    public function setCityNameRuAttribute($value)
    {
        $this->setTranslate("text", ["ru" => $value]);
    }

    public function setCityNameUzAttribute($value)
    {
        $this->setTranslate("text", ["uz" => $value]);
    }

    public function getCountryNameCurrentAttribute()
    {
        return $this->countryName[app()->getLocale()] ?? $this->countryName['ru'];
    }

    public function setCityNameAttribute($value)
    {
        $this->setTranslate("cityName", $value);
    }

    public function getCityNameAttribute(): ?\Illuminate\Support\Collection
    {
        return $this->getTranslations("cityName");
    }

    public function getCityNameCurrentAttribute(): ?string
    {
        return $this->getTranslatable("cityName");
    }

    public function getCityNameUzAttribute()
    {

        return $this->getCityNameAttribute()['uz'] ?? "";
    }

    public function getCityNameRuAttribute()
    {
        return $this->getCityNameAttribute()['ru'] ?? "";
    }

    public function getRegionNameCurrentAttribute(): ?string
    {
        return $this->getTranslatable("regionName");
    }

    public function getRegionNameAttribute(): ?\Illuminate\Support\Collection
    {
        return $this->getTranslations("regionName");
    }

    public function setRegionNameAttribute($value)
    {
        $this->setTranslate("regionName", $value);
    }

    public static function getRules(): array
    {
        return [
            'cityNameUz' => 'required',
            'cityNameRu' => 'required'
        ];
    }

    public function toArray()
    {
        $object = parent::toArray(); // TODO: Change the autogenerated stub
        $object['region'] = $this->getRegionNameAttribute()['ru'];
        $object['countryName'] = $this->countryName['ru'];
        $object['city'] = $this->getCityNameCurrentAttribute();
        unset($object['cityName']);
        return $object;
    }
}

<?php

namespace App\Domain\Lenta\Services;

use App\Domain\Core\Main\Entities\Entity;
use App\Domain\Core\Main\Services\BaseService;
use App\Domain\File\Traits\FileUploadService;
use App\Domain\Lenta\Entities\Lenta;
use App\Domain\Lenta\Interfaces\LentaInterface;

class LentaService extends BaseService implements LentaInterface
{
    use FileUploadService;


    public function getEntity(): Entity
    {
        return Lenta::new();
    }

    private function storeObjectData(array &$object_data)
    {
        $this->serializeTempFile($object_data);
        $object_data['left_image'] = $this->popCondition($object_data, "left_image");
    }

    public function create(array $object_data)
    {
        return $this->transaction(function () use ($object_data) {
            $product = collect($this->popCondition($object_data, self::PRODUCT_SERVICE))->collapse()->toArray();
            $this->storeObjectData($object_data);
            $object = parent::create($object_data);
            $object->product()->attach($product);
            return $object;
        });
    }

    public function update($object, array $object_data)
    {
        $this->storeObjectData($object_data);
        return parent::update($object, $object_data); // TODO: Change the autogenerated stub
    }
}
